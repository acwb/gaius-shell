#!/bin/bash
 
BACKUP=$PATH_USER/Backups/$CLIENTNAME

backupready=0
 

 
SCPD="/mnt/HD/HD_b2/Backup/$CLIENTNAME/"
SCPU="toto"
SCPS="192.168.0.200"
SCPP="22"

 
TAR="$(which tar)"
GZIP="$(which gzip)"
FTP="$(which ftp)"

## Today + hour in 24h format ###
NOW=$(date +%Y-%m-%d.%Hh%M)

notify-send Gaius "Lancement d'un backup local/cloud de $CLIENTNAME"
gmsg Gaius -l -notice "Lancement d'un backup local/cloud de$BOLD $CLIENTNAME $RESET"
cd /home/toto

### Create tmp dir ###
if [ ! -d "$BACKUP" ]; then
    mkdir $BACKUP
fi
mkdir $BACKUP/$NOW

### you can add or delete directories. They will be set to *.gz file

gmsg Gaius -l -notice "Sauvegarde de la liste des paquets..."
dpkg --get-selections > $BACKUP/$NOW/paquets.list


if [ "$CLIENTNAME" == "Solar" ]; then

    gmsg Gaius -l -notice "Compression de ~/Bureau.."
    $TAR -cf $BACKUP/$NOW/Bureau.tar Bureau
    gmsg Gaius -l -notice "Compression de ~/Documents.."
    $TAR -cf $BACKUP/$NOW/Documents.tar Documents
    gmsg Gaius -l -notice "Compression de ~/Images.."
    $TAR -cf $BACKUP/$NOW/Images.tar Images
    gmsg Gaius -l -notice "Compression de ~/bin.."
    $TAR -cf $BACKUP/$NOW/bin.tar bin
    gmsg Gaius -l -notice "Compression de ~/Apps.."
    $TAR -cf $BACKUP/$NOW/Apps.tar Apps
    gmsg Gaius -l -notice "Compression de ~/.ssh.."
    $TAR -cf $BACKUP/$NOW/ssh.tar .ssh
    gmsg Gaius -l -notice "Compression de ~/.fonts.."
    $TAR -cf $BACKUP/$NOW/fonts.tar .fonts
    gmsg Gaius -l -notice "Compression de ~/.cinnamon.."
    $TAR -cf $BACKUP/$NOW/cinnamon.tar .cinnamon
    gmsg Gaius -l -notice "Compression de ~/.gnome.."
    $TAR -cf $BACKUP/$NOW/gnome.tar .gnome
    gmsg Gaius -l -notice "Compression de ~/.icons.."
    $TAR -cf $BACKUP/$NOW/icons.tar .icons
    gmsg Gaius -l -notice "Compression de ~/.themes.."
    $TAR -cf $BACKUP/$NOW/themes.tar .themes
    gmsg Gaius -l -notice "Compression de ~/.putty.."
    $TAR -cf $BACKUP/$NOW/putty.tar .putty
    gmsg Gaius -l -notice "Compression de ~/.config/.."
    $TAR -cf $BACKUP/$NOW/config_autostart.tar .config/autostart
    $TAR -cf $BACKUP/$NOW/config_cairo-dock.tar .config/cairo-dock
    $TAR -cf $BACKUP/$NOW/config_cinnamon-session.tar .config/cinnamon-session
    $TAR -cf $BACKUP/$NOW/config_menus.tar .config/menus
    $TAR -cf $BACKUP/$NOW/config_linuxmint.tar .config/linuxmint
    gmsg Gaius -l -notice "Compression de ~/.local/share/sounds/.."
    $TAR -cf $BACKUP/$NOW/local_share_sounds.tar .local/share/sounds
    gmsg Gaius -l -notice "Compression de ~/.local/share/applications/.."
    $TAR -cf $BACKUP/$NOW/local_share_applications.tar .local/share/applications
    gmsg Gaius -l -notice "Compression de ~/.local/share/cinnamon/.."
    $TAR -cf $BACKUP/$NOW/local_share_cinnamon.tar .local/share/cinnamon

    backupready=1

elif [ "$CLIENTNAME" == "Gaia" ]; then

    gmsg Gaius -l -notice "Compression de ~/Desktop.."
    $TAR -cf $BACKUP/$NOW/Desktop.tar Desktop
    gmsg Gaius -l -notice "Compression de ~/Documents.."
    $TAR -cf $BACKUP/$NOW/Documents.tar Documents
    gmsg Gaius -l -notice "Compression de ~/Pictures.."
    $TAR -cf $BACKUP/$NOW/Pictures.tar Pictures
    gmsg Gaius -l -notice "Compression de ~/bin.."
    $TAR -cf $BACKUP/$NOW/bin.tar bin
    gmsg Gaius -l -notice "Compression de ~/Apps.."
    $TAR -cf $BACKUP/$NOW/Apps.tar Apps
    gmsg Gaius -l -notice "Compression de ~/.ssh.."
    $TAR -cf $BACKUP/$NOW/ssh.tar .ssh
    gmsg Gaius -l -notice "Compression de ~/.fonts.."
    $TAR -cf $BACKUP/$NOW/fonts.tar .fonts
    gmsg Gaius -l -notice "Compression de ~/.gconf.."
    $TAR -cf $BACKUP/$NOW/gconf.tar .gconf
    gmsg Gaius -l -notice "Compression de ~/.gnome.."
    $TAR -cf $BACKUP/$NOW/gnome.tar .gnome
    gmsg Gaius -l -notice "Compression de ~/.icons.."
    $TAR -cf $BACKUP/$NOW/icons.tar .icons
    gmsg Gaius -l -notice "Compression de ~/.putty.."
    $TAR -cf $BACKUP/$NOW/putty.tar .putty
    gmsg Gaius -l -notice "Compression de ~/.config/.."
    $TAR -cf $BACKUP/$NOW/config_Cardapio.tar .config/Cardapio
    $TAR -cf $BACKUP/$NOW/config_chromixium.tar .config/chromixium
    $TAR -cf $BACKUP/$NOW/config_lxpanel.tar .config/lxpanel
    $TAR -cf $BACKUP/$NOW/config_menus.tar .config/menus
    $TAR -cf $BACKUP/$NOW/config_openbox.tar .config/openbox
    $TAR -cf $BACKUP/$NOW/config_ob-autostart.tar .config/ob-autostart
    $TAR -cf $BACKUP/$NOW/config_TransmissionRemoteGUI.tar ".config/Transmission Remote GUI"
    $TAR -cf $BACKUP/$NOW/config_vivaldi.tar .config/vivaldi
    $TAR -cf $BACKUP/$NOW/config_Brackets.tar .config/Brackets
    $TAR -cf $BACKUP/$NOW/config_Brackets.tar .config/Brackets
    gmsg Gaius -l -notice "Compression de ~/.local/share/sounds/.."
    $TAR -cf $BACKUP/$NOW/local_share_sounds.tar .local/share/sounds
    gmsg Gaius -l -notice "Compression de ~/.local/share/applications/.."
    $TAR -cf $BACKUP/$NOW/local_share_applications.tar .local/share/applications

    backupready=1
    
fi

if [ "$backupready" == "1" ]; then

    ARCHIVE=$CLIENTNAME-backup-$NOW.tar.gz
    ARCHIVED=$BACKUP/$NOW

    gmsg Gaius -l -notice "Compression en une archive unique..."
    $TAR -zcf $BACKUP/$ARCHIVE $ARCHIVED

    poidbackup=$(ls -lh $BACKUP/$ARCHIVE | cut -d " " -f5)

    gmsg Gaius -l -notice "Backup$BOLD $CLIENTNAME-backup.$NOW.tar.gz $RESET($poidbackup) prêt"
    notify-send Gaius "Backup $CLIENTNAME-backup.$NOW.tar.gz ($poidbackup) prêt"
    sleep 1
    gmsg Gaius -askauto
    read -t 10 -s -n 1 -p "Appuyer sur une touche pour annuler le transfert automatique et choisir une action.." key 
    if [ "$?" -eq "0" ] ; then
        echo
        echo
        gmsg Gaius -l -notice "En attente d'une action pour $CLIENTNAME-backup.$NOW.tar.gz"
        echo
        echo "1. Transférer sur le NAS et Dropbox"
        echo "2. Tranférer uniquement sur le NAS"
        echo "3. Tranférer uniquement sur Dropbox"
        echo "4. Copier sur le NAS et Dropbox"
        echo "5. Copier uniquement sur le NAS"
        echo "6. Copier uniquement sur Dropbox"
        echo "7. Conserver en local"
        echo "0. Annuler et supprimer les fichiers locaux"
        echo
        echo -n " : "
        read choice
        case $choice in
            1 ) 
                copytonas=1
                copytodbx=1
                dellocal=1
                ;;
            2 ) 
                copytonas=1
                copytodbx=2
                dellocal=1
                ;;
            3 ) 
                copytonas=2
                copytodbx=1
                dellocal=1
                ;;
            4 ) 
                copytonas=1
                copytodbx=1
                dellocal=0
                ;;
            5 ) 
                copytonas=1
                copytodbx=2
                dellocal=0
                ;;
            6 ) 
                copytonas=2
                copytodbx=1
                dellocal=0
                ;;
            7 ) 
                copytonas=2
                copytodbx=2
                dellocal=0
                ;;
            0 ) 
                copytonas=2
                copytodbx=2
                dellocal=1
                ;;
        esac
        echo

    else  # pas de réaction à la fin du timer, on set les actions par défaut 
        copytonas=1
        copytodbx=1
        dellocal=1
    fi

    if [ "$copytonas" == 1 ]; then
        echo
        gmsg Gaius -l -n -do "Transfert du backup sur le NAS..." ;
        scp -P $SCPP -r $BACKUP/$ARCHIVE  $SCPU@$SCPS:$SCPD
        if [[ $? != 0 ]]; then
          gmsg Gaius -l -n -error "Erreur de transfert" ;
          copytonas=3
        else
            amsg snap
            sleep 1
            gmsg Gaius -l -ok "Transfert du backup vers $SCPU@$SCPS:$SCPD terminé" ;
            
        fi
    fi

    if [ "$copytodbx" == 1 ]; then
        read -t 5 -s -n 1 -p " Appuyer sur une touche pour passer la sauvegarde sur Dropbox.." key 
        if [ "$?" -eq "0" ] ; then
            echo
            gmsg Gaius -l -n -notice "Transfert vers Dropbox ignoré" 
            copytodbx=2
        else
            echo   
            gmsg Gaius -l -n -do "Transfert du backup sur Dropbox.." 
            bash $PATH_SCR/dropbox/dropbox_uploader.sh -p upload $BACKUP/$ARCHIVE Backups/$CLIENTNAME/$ARCHIVE
        fi
    fi

    if [ "$dellocal" == 1 ]; then
        gmsg Gaius -l -do "Suppression des fichiers locaux..." ;
        rm -rf $BACKUP/$ARCHIVE
        rm -rf $BACKUP/$NOW
    fi

    # on affiche un recap dans le message de sortie  
    gmsg Gaius -ok "Opérations terminées : "
    if [ "$copytonas" == 1 ]; then
        echo -n "Transfert vers le NAS - "
    fi
    if [ "$copytonas" == 2 ]; then
        echo -n "Transfert vers le NAS ignoré - "
    fi
    if [ "$copytonas" == 3 ]; then
        echo -n "Transfert vers le NAS échoué - "
    fi
    if [ "$copytodbx" == 1 ]; then
        echo -n "Tranfert vers Dropbox - "
    fi
    if [ "$copytodbx" == 2 ]; then
        echo -n "Tranfert vers Dropbox ignoré - "
    fi
    if [ "$copytodbx" == 3 ]; then
        echo -n "Tranfert vers Dropbox échoué - "
    fi
    if [ "$dellocal" == 1 ]; then
        echo -n "Suppression des fichiers locaux"
    else
        echo -n "Conservation des fichiers locaux"
    fi
    echo
    
    if [ "$copytonas" == 1 ] && [ "$copytodbx" == 1 ] ; then
        notify-send Gaius "Backup local et distant de $CLIENTNAME terminé"
    fi
    
    if [ "$copytonas" == 1 ] && [ "$copytodbx" == 2 ] ; then
        notify-send Gaius "Backup local de $CLIENTNAME terminé"
    fi
    
    if [ "$copytonas" == 2 ] && [ "$copytodbx" == 1 ] ; then
        notify-send Gaius "Backup distant de $CLIENTNAME terminé"
    fi
    
    if [ "$copytonas" == 3 ] || [ "$copytodbx" == 3 ] ; then
        notify-send Gaius "Le backup de $CLIENTNAME a échoué"
    fi
    
fi






